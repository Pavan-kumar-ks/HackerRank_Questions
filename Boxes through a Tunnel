The problem statment which I was given is as follows:
You are transporting some boxes through a tunnel, where each box is a parallelepiped, and is characterized by its length, width and height.
The height of the tunnel 41 feet and the width can be assumed to be infinite. 
A box can be carried through the tunnel only if its height is strictly less than the tunnel's height.
Find the volume of each box that can be successfully transported to the other end of the tunnel.
Note: Boxes cannot be rotated.

Constraints :
1<= n <=100
1<= length,width,height <=100

I was asked to develop a structure and two functions . 
First function checked whether the height of the box is greater than 41 or not.
Second function returend the voulme of the box if the height of the box is less than the height of tunnel.

Below is the code I developed to solve this question :-

#include <stdio.h>
#include <stdlib.h>
#define MAX_HEIGHT 41

struct box
{
	int length, width,height;
};

typedef struct box box;

int get_volume(box b) 
{
    int vol;
    vol = b.length*b.width*b.height;
    return vol;
    
}

int is_lower_than_max_height(box b) 
{
    if(b.height < 41)
        return 1;
    else
        return 0;
}

int main()
{
	int n;
	scanf("%d", &n);
	box *boxes = malloc(n * sizeof(box));
	for (int i = 0; i < n; i++) {
		scanf("%d%d%d", &boxes[i].length, &boxes[i].width, &boxes[i].height);
	}
	for (int i = 0; i < n; i++) {
		if (is_lower_than_max_height(boxes[i])) {
			printf("%d\n", get_volume(boxes[i]));
		}
	}
	return 0;
}

This problem described the importance of structre and enumerated datatypes.
Hope this helps :)
