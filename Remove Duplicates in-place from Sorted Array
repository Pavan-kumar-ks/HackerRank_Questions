Problem Statement:
Given an integer array sorted in non-decreasing order, remove the duplicates in place such that each unique element appears only once.
The relative order of the elements should be kept the same.

If there are k elements after removing the duplicates, then the first k elements of the array should hold the final result. 
It does not matter what you leave beyond the first k elements.

CODE:

#include<stdio.h>
#include<stdlib.h>
#include<ctype.h>

int remove(int a[],int size)
{
    int i=0;
    int j;
    for(j=1;j<=size;j++)
    {
        if(a[i] != a[j])
        {
            i++;
            a[i] = a[j];
        }
    }
    return i;
}

int main()
{
    int size,k,i;
    printf("enter the size of array\n");
    scanf("%d",&size);
    int a[size];
    printf("enter array elements \n");
    for(i=0;i<size;i++)
    {
        scanf("%d",&a[i]);
    }
    k = remove(a,size);
    for(int i=0;i<k;i++)
    {
        printf("%d ",a[i]);
    }    
}

Hope this helps :)
